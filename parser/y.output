
state 0
	$accept: .program $end 
	block_stmt: .    (5)

	.  reduce 5 (src line 60)

	program  goto 1
	block_stmt  goto 2

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  block_stmt.    (1)
	block_stmt:  block_stmt.stmt ; 

	identifier  shift 4
	{  shift 5
	.  reduce 1 (src line 33)

	stmt  goto 3

state 3
	block_stmt:  block_stmt stmt.; 

	;  shift 6
	.  error


state 4
	stmt:  identifier.( arguments ) 

	(  shift 7
	.  error


state 5
	stmt:  {.block_stmt } 
	block_stmt: .    (5)

	.  reduce 5 (src line 60)

	block_stmt  goto 8

state 6
	block_stmt:  block_stmt stmt ;.    (4)

	.  reduce 4 (src line 55)


state 7
	stmt:  identifier (.arguments ) 

	identifier  shift 13
	number  shift 14
	-  shift 12
	(  shift 11
	.  error

	expr  goto 10
	arguments  goto 9

state 8
	stmt:  { block_stmt.} 
	block_stmt:  block_stmt.stmt ; 

	identifier  shift 4
	{  shift 5
	}  shift 15
	.  error

	stmt  goto 3

state 9
	stmt:  identifier ( arguments.) 
	arguments:  arguments., expr 

	)  shift 16
	,  shift 17
	.  error


state 10
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	arguments:  expr.    (15)

	+  shift 18
	-  shift 19
	*  shift 20
	/  shift 21
	.  reduce 15 (src line 114)


state 11
	expr:  (.expr ) 

	identifier  shift 13
	number  shift 14
	-  shift 12
	(  shift 11
	.  error

	expr  goto 22

state 12
	expr:  -.expr 

	identifier  shift 13
	number  shift 14
	-  shift 12
	(  shift 11
	.  error

	expr  goto 23

state 13
	expr:  identifier.( arguments ) 

	(  shift 24
	.  error


state 14
	expr:  number.    (13)

	.  reduce 13 (src line 96)


state 15
	stmt:  { block_stmt }.    (3)

	.  reduce 3 (src line 47)


state 16
	stmt:  identifier ( arguments ).    (2)

	.  reduce 2 (src line 40)


state 17
	arguments:  arguments ,.expr 

	identifier  shift 13
	number  shift 14
	-  shift 12
	(  shift 11
	.  error

	expr  goto 25

state 18
	expr:  expr +.expr 

	identifier  shift 13
	number  shift 14
	-  shift 12
	(  shift 11
	.  error

	expr  goto 26

state 19
	expr:  expr -.expr 

	identifier  shift 13
	number  shift 14
	-  shift 12
	(  shift 11
	.  error

	expr  goto 27

state 20
	expr:  expr *.expr 

	identifier  shift 13
	number  shift 14
	-  shift 12
	(  shift 11
	.  error

	expr  goto 28

state 21
	expr:  expr /.expr 

	identifier  shift 13
	number  shift 14
	-  shift 12
	(  shift 11
	.  error

	expr  goto 29

state 22
	expr:  ( expr.) 
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 

	+  shift 18
	-  shift 19
	*  shift 20
	/  shift 21
	)  shift 30
	.  error


state 23
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  - expr.    (9)
	expr:  expr.* expr 
	expr:  expr./ expr 

	*  shift 20
	/  shift 21
	.  reduce 9 (src line 78)


state 24
	expr:  identifier (.arguments ) 

	identifier  shift 13
	number  shift 14
	-  shift 12
	(  shift 11
	.  error

	expr  goto 10
	arguments  goto 31

state 25
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	arguments:  arguments , expr.    (14)

	+  shift 18
	-  shift 19
	*  shift 20
	/  shift 21
	.  reduce 14 (src line 109)


state 26
	expr:  expr.+ expr 
	expr:  expr + expr.    (7)
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 

	*  shift 20
	/  shift 21
	.  reduce 7 (src line 70)


state 27
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr - expr.    (8)
	expr:  expr.* expr 
	expr:  expr./ expr 

	*  shift 20
	/  shift 21
	.  reduce 8 (src line 74)


state 28
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr * expr.    (10)
	expr:  expr./ expr 

	.  reduce 10 (src line 82)


state 29
	expr:  expr.+ expr 
	expr:  expr.- expr 
	expr:  expr.* expr 
	expr:  expr./ expr 
	expr:  expr / expr.    (11)

	.  reduce 11 (src line 86)


state 30
	expr:  ( expr ).    (6)

	.  reduce 6 (src line 65)


state 31
	expr:  identifier ( arguments.) 
	arguments:  arguments., expr 

	)  shift 32
	,  shift 17
	.  error


state 32
	expr:  identifier ( arguments ).    (12)

	.  reduce 12 (src line 90)


15 terminals, 6 nonterminals
16 grammar rules, 33/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
55 working sets used
memory: parser 14/30000
2 extra closures
67 shift entries, 1 exceptions
14 goto entries
2 entries saved by goto default
Optimizer space used: output 43/30000
43 table entries, 2 zero
maximum spread: 15, maximum offset: 24
